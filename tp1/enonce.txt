Travail pratique 1

  L'objectif est de vous initier à la programmation avec le langage C, en
  manipulant des données et des fichiers, ainsi que la gestion des arguments.

  Vos sources serons maintenus dans un gestionnaire de source.

Contrainte

  Le travail pratique 1 est à faire individuellement. Donc chacun doit faire son dépôt
  GitHub ou Bitbucket avec un système de gestion de version type Git.


Description du travail

  Le programme tp1 doit pouvoir être lancé en ligne de commande avec l'une des deux syntaxes suivantes :

  ./tp1 -i nom_du_fichier.ext -o programme-output.ext
  ./tp1 < nom_du_fichier_.ext > programme-output.ext

  -i <fichier source en entrée>
  -o <fichier traité en sortie>


  Le programme peut accepter un nom de fichier par l'entrée standard
  et produire dans un fichier ou dans la sortie standard le résultat demandé.


Vous devez indenter un programme C selon les contraintes suivantes:

 Tout le code dans un bloc sera indenté de 2 espaces;
 Les commentaires dans un bloc /* ici */ commentaire sera aussi indenté de 2 espaces;
 Les commentaires sont traités comme du code lorsque les // sont utilisés;
 Les fichiers Linux ou Windows (LF) ou (CR LF) devront être supporté, détecté et préservé.


Exemple



int main(void) {
/* commentaire */
for (int i=0;i<1;i++) { // commentaire
// bla bla
printf("OK"); }

return 0;
}


devient



int main(void)
{

  for (int i=0;i<1;i++)
  {
    // commentaire
    // bla bla
    printf("OK");
  }

  return 0;
}



Makefile

  Il est obligatoire d'inclure un fichier Makefile dans votre projet pour
  faciliter la compilation et la récupération des données. Celui-ci doit
  minimalement offrir les services suivants :

- Lorsqu'on entre simplement make, l'exécutable tp1 doit être produit
  (ou mis à jour);

- Lorsqu'on entre make clean, les fichiers .o et l'exécutable doivent
  être supprimés;

- Lorsqu'on entre make data, le téléchargement des données (fichier) se fait
  de façon automatique dans un répertoire (./data). La décompression est nécessaire.
  https://www.github.com/guyfrancoeur/INF3135_H2019/tp1/tp1.zip;

- Lorsqu'on entre make test le programme tp1 s'exécutera avec les fichiers
  contenus dans ./data.



README.md

  En plus du code source nommé tp1.c et du fichier nommé Makefile, votre projet doit contenir
  un fichier nommé README.md qui décrit le contenu et qui **respecte le
  format Markdown**. Il doit minimalement contenir les informations ci-bas :



   # Travail pratique 1

   ## Description

   <description du projet en quelques phrases>
   <mentionner le contexte (cours, sigle, université, etc.)>

   ## Auteur

   <prénom et nom> (<code permanent>)

   ## Fonctionnement

   <expliquez brièvement comment faire fonctionner votre projet, en inscrivant
   au moins deux exemples d'utilisation (commande lancée et résultat affiché)>

   ## Contenu du projet

   <décrivez brièvement chacun des fichiers contenus dans le projet (une phrase
   par fichier)>

   ## Références

   <citez vos sources ici>

   ## Statut

   <indiquez si le projet est complété ou s'il y a des bogues>



Remise

  La totalité de votre travail doit être remis au plus tard le **10 février
  2019** à **23h59**. À partir de minuit, une pénalité de **2 point par jour** de
  retard sera appliquée.

  La remise se fait **obligatoirement** par l'intermédiaire de la plateforme
  Bitbucket <https://bitbucket.org/>__ ou Github <https://github.com/>__.
  **Aucune remise par courriel ne sera acceptée** (le travail sera considéré
  comme non remis).

  Le nom de votre dépôt doit être inf3135-h2019-tp1 (en minuscules). Vous
  devez donner un accès en mode **lecture/écriture** (pas **admin**) à
  l'utilisateur guyfrancoeur (moi-même). Ceci me permettra de déposer directement
  dans vos projets votre note pour le travail ainsi que mes commentaires.

  Votre projet devrait minimalement contenir les fichiers suivants :

 Un fichier tp1.c contenant le code source de votre projet, ainsi que
  votre fonction main.
 Un fichier README.md avec le titre du projet, les auteurs, les exemples,
  etc.
 Un fichier nommé Makefile supportant les appels make, make clean,
  make database, make data et make resultat.
 Un fichier .gitignore. Ça aide beaucoup.

  Les travaux seront corrigés sur le serveur Java. Vous devez donc vous assurer
  que votre programme fonctionne **sans modification** sur celui-ci.

Barème de correction

+-------------------------+-----------------------------------------+-----------+
| Critère                 | Sous-critère                            | Points    |
+=========================+=========================================+===========+
| Fonctionnabilité        | 5 à 10 tests seront lancés (indentique) | 5         |
+-------------------------+-----------------------------------------+-----------+
| Compilation             | Sans Avertissement ni erreur            | 1.5       +
+-------------------------+-----------------------------------------+-----------+
| Git clone               | Récuperation (droit lecture, écriture)  | 1         |
+-------------------------+-----------------------------------------+-----------+
| Qualité du code         | time (perf) ou qualité                  | 2.5       +
+-------------------------+-----------------------------------------+-----------+
|                         | make tp1 avec dépendance perf.h         | 1         |
|                         +-----------------------------------------+-----------+
|                         | make clean                              | 1         |
| Makefile                +-----------------------------------------+-----------+
|                         | make data                               | 0.5       |
|                         +-----------------------------------------+-----------+
|                         | make test                               | 0.5       |
|                         +-----------------------------------------+-----------+
|                         | make résultat                           | 1         |
+-------------------------+-----------------------------------------+-----------+
| Markdown                | README.md                               | 1         |
+-------------------------+-----------------------------------------+-----------+
| **Total**                                                         | 15        |
+-------------------------+-----------------------------------------+-----------+
